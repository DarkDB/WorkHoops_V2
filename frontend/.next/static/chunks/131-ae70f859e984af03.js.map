{"version":3,"file":"static/chunks/131-ae70f859e984af03.js","mappings":"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","sources":["webpack://_N_E/../src/label.tsx","webpack://_N_E/./node_modules/@radix-ui/number/dist/index.mjs","webpack://_N_E/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs","webpack://_N_E/../src/select.tsx","webpack://_N_E/./node_modules/@radix-ui/react-use-previous/dist/index.mjs"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ComponentRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n","// packages/core/number/src/number.ts\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\nexport {\n  clamp\n};\n//# sourceMappingURL=index.mjs.map\n","// src/visually-hidden.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VISUALLY_HIDDEN_STYLES = Object.freeze({\n  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss\n  position: \"absolute\",\n  border: 0,\n  width: 1,\n  height: 1,\n  padding: 0,\n  margin: -1,\n  overflow: \"hidden\",\n  clip: \"rect(0, 0, 0, 0)\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n});\nvar NAME = \"VisuallyHidden\";\nvar VisuallyHidden = React.forwardRef(\n  (props, forwardedRef) => {\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        ...props,\n        ref: forwardedRef,\n        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style }\n      }\n    );\n  }\n);\nVisuallyHidden.displayName = NAME;\nvar Root = VisuallyHidden;\nexport {\n  Root,\n  VISUALLY_HIDDEN_STYLES,\n  VisuallyHidden\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VISUALLY_HIDDEN_STYLES } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value: string | undefined;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface ControlledClearableSelectProps {\n  value: string | undefined;\n  defaultValue?: never;\n  onValueChange: (value: string | undefined) => void;\n}\n\ninterface ControlledUnclearableSelectProps {\n  value: string;\n  defaultValue?: never;\n  onValueChange: (value: string) => void;\n}\n\ninterface UncontrolledSelectProps {\n  value?: never;\n  defaultValue?: string;\n  onValueChange?: {\n    (value: string): void;\n    (value: string | undefined): void;\n  };\n}\n\ntype SelectControlProps =\n  | ControlledClearableSelectProps\n  | ControlledUnclearableSelectProps\n  | UncontrolledSelectProps;\n\ninterface SelectSharedProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n  form?: string;\n}\n\n// TODO: Should improve typing somewhat, but this would be a breaking change.\n// Consider using in the next major version (along with some testing to be sure\n// it works as expected and doesn't cause problems)\ntype _FutureSelectProps = SelectSharedProps & SelectControlProps;\n\ntype SelectProps = SelectSharedProps & {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n};\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: SELECT_NAME,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange as any,\n    caller: SELECT_NAME,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? form || !!trigger.closest('form') : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <SelectBubbleInput\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n            form={form}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </SelectBubbleInput>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = (pointerEvent?: React.MouseEvent | React.PointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY),\n        };\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={shouldShowPlaceholder(context.value) ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n\n            // Open on click when using a touch or pen device\n            if (pointerTypeRef.current !== 'mouse') {\n              handleOpen(event);\n            }\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            pointerTypeRef.current = event.pointerType;\n\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click); also not for touch\n            // devices because that would open the menu on scroll. (pen devices behave as touch on iOS).\n            if (event.button === 0 && event.ctrlKey === false && event.pointerType === 'mouse') {\n              handleOpen(event);\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder = '', ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {shouldShowPlaceholder(context.value) ? <>{placeholder}</> : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '▼'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst Slot = createSlot('SelectContent.RemoveScroll');\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem =\n          items.length > 0 && selectedItem === items[items.length - 1]!.ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0]!.ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              // Viewport should only be scrollable in the vertical direction.\n              // This won't work in vertical writing modes, so we'll need to\n              // revisit this if/when that is supported\n              // https://developer.chrome.com/blog/vertical-form-controls\n              overflow: 'hidden auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    if (value === '') {\n      throw new Error(\n        'A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.'\n      );\n    }\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onClick={composeEventHandlers(itemProps.onClick, () => {\n              // Open on click when using a touch or pen device\n              if (pointerTypeRef.current !== 'mouse') handleSelect();\n            })}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, () => {\n              // Using a mouse you should be able to do pointer down, move through\n              // the list, and release the pointer over the item to select it.\n              if (pointerTypeRef.current === 'mouse') handleSelect();\n            })}\n            onPointerDown={composeEventHandlers(itemProps.onPointerDown, (event) => {\n              pointerTypeRef.current = event.pointerType;\n            })}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              // Remember pointer type when sliding over to this item from another one\n              pointerTypeRef.current = event.pointerType;\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else if (pointerTypeRef.current === 'mouse') {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'SelectBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.select>;\ninterface SwitchBubbleInputProps extends InputProps {}\n\nconst SelectBubbleInput = React.forwardRef<HTMLSelectElement, SwitchBubbleInputProps>(\n  ({ __scopeSelect, value, ...props }: ScopedProps<SwitchBubbleInputProps>, forwardedRef) => {\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current;\n      if (!select) return;\n\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much as\n     * possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programmatically and bubble to any parent form `onChange`\n     * event. Adding the `value` will cause React to consider the programmatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use visually hidden styles rather than `display: \"none\"` because\n     * Safari autofill won't work otherwise.\n     */\n    return (\n      <Primitive.select\n        {...props}\n        style={{ ...VISUALLY_HIDDEN_STYLES, ...props.style }}\n        ref={composedRefs}\n        defaultValue={value}\n      />\n    );\n  }\n);\n\nSelectBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction shouldShowPlaceholder(value?: string) {\n  return value === '' || value === undefined;\n}\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0]! : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n","// packages/react/use-previous/src/use-previous.tsx\nimport * as React from \"react\";\nfunction usePrevious(value) {\n  const ref = React.useRef({ value, previous: value });\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["Label","React","props","forwardedRef","jsx","Primitive","label","ref","onMouseDown","target","closest","event","defaultPrevented","detail","preventDefault","displayName","Root","clamp","value","min","max","Math","VISUALLY_HIDDEN_STYLES","Object","freeze","position","border","width","height","padding","margin","overflow","clip","whiteSpace","wordWrap","VisuallyHidden","react","forwardRef","jsx_runtime","react_primitive_dist","WV","span","style","OPEN_KEYS","SELECTION_KEYS","SELECT_NAME","Collection","useCollection","createCollectionScope","createCollection","createSelectContext","createSelectScope","createContextScope","createPopperScope","usePopperScope","SelectProvider","useSelectContext","SelectNativeOptionsProvider","useSelectNativeOptionsContext","Select","__scopeSelect","children","open","openProp","defaultOpen","onOpenChange","valueProp","defaultValue","onValueChange","dir","name","autoComplete","disabled","required","form","popperScope","trigger","setTrigger","valueNode","setValueNode","valueNodeHasChildren","setValueNodeHasChildren","direction","useDirection","setOpen","useControllableState","prop","defaultProp","onChange","caller","setValue","triggerPointerDownPosRef","isFormControl","nativeOptionsSet","setNativeOptionsSet","Set","nativeSelectKey","Array","from","map","option","join","PopperPrimitive","jsxs","scope","onTriggerChange","onValueNodeChange","onValueNodeHasChildrenChange","contentId","useId","Provider","onNativeOptionAdd","prev","add","onNativeOptionRemove","optionsSet","delete","SelectBubbleInput","tabIndex","TRIGGER_NAME","SelectTrigger","triggerProps","context","isDisabled","composedRefs","useComposedRefs","getItems","pointerTypeRef","searchRef","handleTypeaheadSearch","resetTypeahead","useTypeaheadSearch","enabledItems","filter","item","currentItem","find","nextItem","findNextItem","search","handleOpen","pointerEvent","current","x","round","pageX","y","pageY","asChild","button","type","role","shouldShowPlaceholder","onClick","composeEventHandlers","currentTarget","focus","onPointerDown","pointerType","hasPointerCapture","pointerId","releasePointerCapture","ctrlKey","onKeyDown","isTypingAhead","altKey","metaKey","key","length","includes","VALUE_NAME","SelectValue","className","placeholder","valueProps","hasChildren","useLayoutEffect","pointerEvents","Fragment","SelectIcon","iconProps","SelectPortal","PortalPrimitive","CONTENT_NAME","SelectContent","fragment","setFragment","DocumentFragment","SelectContentImpl","frag","ReactDOM","SelectContentProvider","Slot","useSelectContentContext","createSlot","onCloseAutoFocus","onEscapeKeyDown","onPointerDownOutside","side","sideOffset","align","alignOffset","arrowPadding","collisionBoundary","collisionPadding","sticky","hideWhenDetached","avoidCollisions","contentProps","content","setContent","viewport","setViewport","node","selectedItem","setSelectedItem","selectedItemText","setSelectedItemText","isPositioned","setIsPositioned","firstValidItemFoundRef","hideOthers","useFocusGuards","focusFirst","firstItem","restItems","lastItem","slice","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","candidates","scrollIntoView","block","scrollTop","scrollHeight","focusSelectedItem","pointerMoveDelta","handlePointerMove","abs","handlePointerUp","contains","removeEventListener","addEventListener","capture","once","close","window","setTimeout","itemRefCallback","isFirstValidItem","isSelectedItem","handleItemLeave","itemTextRefCallback","SelectPosition","SelectPopperPosition","SelectItemAlignedPosition","popperContentProps","onViewportChange","onItemLeave","RemoveScroll","as","allowPinchZoom","FocusScope","trapped","onMountAutoFocus","onUnmountAutoFocus","preventScroll","DismissableLayer","disableOutsidePointerEvents","onFocusOutside","onDismiss","id","onContextMenu","onPlaced","display","flexDirection","outline","isModifierKey","candidateNodes","items","reverse","currentElement","currentIndex","indexOf","popperProps","contentContext","contentWrapper","setContentWrapper","shouldExpandOnScrollRef","shouldRepositionRef","triggerRect","getBoundingClientRect","contentRect","valueNodeRect","itemTextRect","itemTextOffset","left","leftDelta","minContentWidth","contentWidth","clampedLeft","rightEdge","innerWidth","minWidth","right","rightDelta","clampedRight","leftEdge","availableHeight","innerHeight","CONTENT_MARGIN","itemsHeight","contentStyles","getComputedStyle","contentBorderTopWidth","parseInt","borderTopWidth","contentPaddingTop","paddingTop","contentBorderBottomWidth","borderBottomWidth","fullContentHeight","paddingBottom","minContentHeight","offsetHeight","viewportStyles","viewportPaddingTop","viewportPaddingBottom","topEdgeToTriggerMiddle","top","selectedItemHalfHeight","contentTopToItemMiddle","offsetTop","isLastItem","bottom","viewportOffsetBottom","clientHeight","isFirstItem","clampedTopEdgeToTriggerMiddle","concat","minHeight","maxHeight","requestAnimationFrame","contentZIndex","setContentZIndex","zIndex","handleScrollButtonChange","SelectViewportProvider","onScrollButtonChange","div","boxSizing","useSelectViewportContext","VIEWPORT_NAME","SelectViewport","nonce","viewportProps","viewportContext","prevScrollTopRef","dangerouslySetInnerHTML","__html","flex","onScroll","scrolledBy","prevHeight","parseFloat","nextHeight","clampedNextHeight","heightDiff","justifyContent","GROUP_NAME","SelectGroupContextProvider","useSelectGroupContext","SelectGroup","groupProps","groupId","LABEL_NAME","SelectLabel","labelProps","groupContext","ITEM_NAME","SelectItemContextProvider","useSelectItemContext","SelectItem","textValue","textValueProp","itemProps","isSelected","setTextValue","isFocused","setIsFocused","textId","handleSelect","onItemTextChange","prevTextValue","textContent","trim","ItemSlot","onFocus","onBlur","onPointerUp","onPointerMove","onPointerLeave","ITEM_TEXT_NAME","SelectItemText","itemTextProps","itemContext","nativeOptionsContext","itemTextNode","setItemTextNode","nativeOption","ITEM_INDICATOR_NAME","SelectItemIndicator","itemIndicatorProps","SCROLL_UP_BUTTON_NAME","SelectScrollUpButton","canScrollUp","setCanScrollUp","handleScroll","SelectScrollButtonImpl","onAutoScroll","SCROLL_DOWN_BUTTON_NAME","SelectScrollDownButton","canScrollDown","setCanScrollDown","maxScroll","ceil","scrollIndicatorProps","autoScrollTimerRef","clearAutoScrollTimer","clearInterval","activeItem","flexShrink","setInterval","SelectSeparator","separatorProps","ARROW_NAME","SelectArrow","arrowProps","param","prevValue","usePrevious","select","descriptor","getOwnPropertyDescriptor","HTMLSelectElement","prototype","set","Event","bubbles","call","dispatchEvent","onSearchChange","handleSearchChange","useCallbackRef","timerRef","updateSearch","clearTimeout","startIndex","normalizedSearch","isRepeated","every","char","wrappedItems","array","_","index","v","toLowerCase","startsWith","Trigger","Value","Icon","Portal","Content","Viewport","Group","Item","ItemText","ItemIndicator","ScrollUpButton","ScrollDownButton","Separator","react__WEBPACK_IMPORTED_MODULE_0__","useRef","previous","useMemo"],"sourceRoot":""}